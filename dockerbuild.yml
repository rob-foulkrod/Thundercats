trigger:
- features/*
- main


variables: 
  azureSubscription: 'thundercats-sp'
  appName: 'thundercatscontainers'
  containerRegistry: 'thundercatsregistry'
  dockerRegistryServiceConnection: 'thundercats-docker-registry'
  imageRepository: 'thundercatsfe'
  dockerfilePath: '$(Build.SourcesDirectory)/ThunderCats.Web/Dockerfile'
  dockerNamespace: 'thundercatsregistry.azurecr.io'
  tag: '$(Build.BuildId)'
  resourceGroupName: 'thundercats'

  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

  vmImageName: 'ubuntu-latest'

stages:
- stage: BuildStage
  jobs:
  - job: BuildJob
    displayName: Build and Publish to ACR
    pool:
      vmImage: $(vmImageName)
    steps:
    - bash: tree
      displayName: Where Am I
      workingDirectory: $(Build.SourcesDirectory)
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: $(dockerRegistryServiceConnection)

    - task: Docker@2
      displayName: Build and Push
      inputs:
        repository: $(imageRepository)
        command: 'buildAndPush'
        Dockerfile: $(dockerfilePath)
        buildContext: '$(Build.SourcesDirectory)/ThunderCats.Web/'
        tags: '$(tag)'

- stage: deployToDevStage
  jobs:
    - deployment: DeployToDev
      displayName: Deploy To Dev Env
      environment: thundercatscontainerdev_env
      pool:
        vmImage: $(vmImageName)
      strategy:
        runOnce:

          deploy:
            steps:
            - bash: tree
              displayName: Where Am I
              workingDirectory: $(Agent.BuildDirectory)

            - task: AzureRMWebAppDeployment@4
              displayName: Deploy To Dev Slot
              inputs:
                appType: webAppContainer
                ConnectedServiceName: $(azureSubscription)
                WebAppName: $(appName)
                DockerNamespace: $(dockerNamespace)
                DockerRepository: $(imageRepository)
                DockerImageTag: $(tag)
                deployToSlotOrASE: true
                SlotName: dev
                ResourceGroupName: $(resourceGroupName)

              
- stage: deployToProd
  condition: and(succeeded(), eq(variables.isMain, 'true'))
  dependsOn: deployToDevStage
  jobs:
    - deployment: webDeployToProd
      displayName: Deploy To Prod Env
      environment: thundercatscontainerprod_env
      pool:
        vmImage: $(vmImageName)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureRMWebAppDeployment@4
              displayName: Deploy To Dev Slot
              inputs:
                appType: webAppContainer
                ConnectedServiceName: $(azureSubscription)
                WebAppName: $(appName)
                DockerNamespace: $(dockerNamespace)
                DockerRepository: $(imageRepository)
                DockerImageTag: $(tag)
                deployToSlotOrASE: true
                SlotName: production
                ResourceGroupName: $(resourceGroupName)