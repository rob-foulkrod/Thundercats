
name: $(date:yyyyMMdd)$(rev:.r)

variables:
- name: BuildParameters.RestoreBuildProjects
  value: '**/*.csproj'
- name: BuildParameters.TestProjects
  value: '**/*[Tt]ests/*.csproj'

- name: BuildConfiguration
  value: 'Release'

- name: subscription
  value: 'thundercats-sp'

- name: resourceGroup
  value: 'thundercats'

- name: webAppName
  value: 'thundercatsweb'

stages:
- stage: build
  jobs:
  - job: CI
    displayName: Linux Build Job
    pool:
      name: Azure Pipelines
    steps:
    - checkout: self
      fetchDepth: 1
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: $(BuildParameters.RestoreBuildProjects)
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: $(BuildParameters.RestoreBuildProjects)
        arguments: --configuration $(BuildConfiguration)
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: $(BuildParameters.TestProjects)
        arguments: --configuration $(BuildConfiguration)
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        projects: $(BuildParameters.RestoreBuildProjects)
        arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)
        zipAfterPublish: True
    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      condition: succeededOrFailed()
      inputs:
        PathtoPublish: $(build.artifactstagingdirectory)


- stage: deployToTest
  jobs:
    - deployment: DeployToTest
      displayName: Deploy To Test Env
      environment: thundercatsdevenv
      strategy:
        runOnce:

          deploy:
            steps:
              - bash: tree
                displayName: Where Am I
                workingDirectory: $(Agent.BuildDirectory)

              - task: AzureRmWebAppDeployment@4
                displayName: Deploy App To Test
                inputs:
                  ConnectionType: "AzureRM"
                  azureSubscription: $(subscription)
                  appType: "webAppLinux"
                  WebAppName: $(webAppName)
                  deployToSlotOrASE: true
                  ResourceGroupName: $(resourceGroup)
                  SlotName: "dev"
                  packageForLinux: "$(Agent.BuildDirectory)/drop/ThunderCats.Web.zip"

              
- stage: deployToProd
  condition: and(succeeded(), eq(variables.isMain, 'true'))
  dependsOn: deployToTest
  jobs:
    - deployment: webDeployToProd
      displayName: Deploy To Prod Env
      environment: thundercatsProdEnv
      strategy:
        runOnce:
          deploy:
            steps:
              - task: AzureRmWebAppDeployment@4
                inputs:
                  ConnectionType: "AzureRM"
                  azureSubscription: $(subscription)
                  appType: "webAppLinux"
                  WebAppName: $(webAppName)
                  packageForLinux: "$(Agent.BuildDirectory)/drop/ThunderCats.Web.zip"
